# #############################################################################
FROM python:3.9-slim-bullseye as python-base

# #############################################################################
FROM python-base as prep

WORKDIR /security/certs

# Ephemeral certificates
RUN mkdir -p ca/ server/ client/ && \
    # Generate CA key and CA cert
    openssl req -x509 -days 36500 -nodes -newkey rsa:4096 \
    -subj "/C=US/ST=New York/L=Yorktown Heights/O=PrimeQA/OU=Research/CN=example.com" \
    -keyout ca/ca.key -out ca/ca.crt && \
    # Generate Server key (without passphrase) and Server cert signing request
    openssl req -nodes -new -newkey rsa:4096 \
    -subj "/C=US/ST=New York/L=Yorktown Heights/O=PrimeQA/OU=Research/CN=example.com" \
    -keyout server/server.key -out server/server.csr && \
    # Sign Server cert
    openssl x509 -req -days 36500 \
    -in server/server.csr -CA ca/ca.crt -CAkey ca/ca.key -CAcreateserial \
    -out server/server.crt && \
    # Generate Client key (without passphrase) and Client cert signing request
    openssl req -nodes -new -newkey rsa:4096 \
    -subj "/C=US/ST=New York/L=Yorktown Heights/O=PrimeQA/OU=Research/CN=example.com" \
    -keyout client/client.key -out client/client.csr && \
    # Sign Client cert
    openssl x509 -req -days 36500 \
    -in client/client.csr -CA ca/ca.crt -CAkey ca/ca.key -CAserial ca/ca.srl \
    -out client/client.crt && \
    # Delete signing requests
    rm -rf server/server.csr && \
    rm -rf client/client.csr

WORKDIR /protos

COPY ./primeqa/services/grpc_server/protos/*.proto ./

RUN pip install grpcio-tools && \
    python -m grpc_tools.protoc -I./ --python_out=. --grpc_python_out=. ./*.proto && \
    # the grpc_tools appears to use python2 style import statements, which fail in python3
    # https://github.com/grpc/grpc/issues/9575, we convert the import statements using the provided
    # 2to3 Python utility https://docs.python.org/3.9/library/2to3.html
    # 2to3 --fix=import --nobackups --write ./ && \
    # 2to3 failing to replace imports, switching to sed:
    sed -i 's/^import \([a-z_][a-zA-Z0-9_]*\) as \([a-z_][a-zA-Z0-9_]*\)$/from . import \1 as \2/' ./*.py

# #############################################################################

FROM python-base as wheel

WORKDIR /app

COPY ./setup.py ./VERSION ./LICENSE ./MANIFEST.in ./README.md ./ 

COPY ./primeqa ./primeqa

COPY --from=prep /protos/*.py ./primeqa/services/grpc_server/grpc_generated/

RUN python setup.py bdist_wheel --python-tag py3

# #############################################################################

FROM nvidia/cuda:11.6.0-cudnn8-devel-ubuntu20.04 as build

RUN apt update && \
    DEBIAN_FRONTEND="noninteractive" TZ="America/New_York" \
    apt install -y git tini\
    openjdk-11-jdk \
    python3 \
    python3-pip \
    python3.8-venv \
    ca-certificates && \
    rm -rf /var/lib/apt/lists

# Install Java, python and other depedencies
RUN python3 -m pip install --no-cache-dir --upgrade pip

# Setup and activate virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
## This automatically enables virtualenv for both, Docker RUN and CMD commands
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Torch [GPU]
RUN pip install 'torch~=1.11.0' --extra-index-url https://download.pytorch.org/whl/cu113

# Ephemeral certificates
COPY --from=prep /security/certs /opt/tls

RUN chmod -R 0664 /opt/tls/ca/* && \
    chmod -R 0664 /opt/tls/client/* && \
    chmod -R 0664 /opt/tls/server/*

# Set Python specific configurations
ENV PYTHONDONTWRITEBYTECODE true
ENV PYTHONFAULTHANDLER true

# Default configurations
USER root

# Expose gRPC server port
ENV grpc_port 50051
EXPOSE ${grpc_port}

# Expose REST server port
ENV rest_port 50052
EXPOSE ${rest_port}

# Create application user
RUN useradd -c "Application User" -U -u 2000 -d /app -m app

WORKDIR /app

# Copy wheel
COPY --from=wheel /app/VERSION .
COPY --from=wheel /app/dist/*.whl ./wheels/

# Install wheel
RUN pip install wheels/primeqa-$(cat VERSION)-py3-none-any.whl[gpu]

# List packages
RUN pip list

# Set cache location for huggingface models
ENV HF_HOME=/cache/huggingface
RUN mkdir -p ${HF_HOME} && chmod -R 777 ${HF_HOME}

# Run service
# CMD ["tini", "--", "python", "-m", "primeqa.services.application"]



#
# below here leaderboard-specific stuff
#
RUN mkdir -p /scratch && chmod -R 777 /scratch
ENV BASE_MODEL_DIR /model
WORKDIR ${BASE_MODEL_DIR}
COPY . .
#

WORKDIR /tydiqa_model
# Put submission.sh where Google expects it
COPY examples/tydi_leaderboard_submission/submission.sh ./submission.sh
RUN chmod +x ./submission.sh

USER 2000